name: Upload Release Asset

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*.*.*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org/'
      - name: Build front-end
        run: | 
          cd front-end
          yarn config set registry https://registry.npmjs.org/
          # 添加NODE_TLS_REJECT_UNAUTHORIZED=0以绕过证书验证问题
          NODE_TLS_REJECT_UNAUTHORIZED=0 yarn --network-timeout 600000
          NODE_TLS_REJECT_UNAUTHORIZED=0 yarn build
      - name: Install dependencies
        run: |
          yarn config set registry https://registry.npmjs.org/
          # 添加NODE_TLS_REJECT_UNAUTHORIZED=0以绕过证书验证问题
          NODE_TLS_REJECT_UNAUTHORIZED=0 yarn install --network-timeout 600000
          
      - name: Package
        shell: bash
        run: |
          rm -rf network-rc dist
          mkdir network-rc
          cp index.js network-rc
          cp package.json network-rc/
          cp -r lib network-rc/
          cp -r node_modules network-rc/
          mkdir network-rc/front-end
          cp -r front-end/build network-rc/front-end/
          # 添加安装脚本
          cp install_with_cloudflare.sh network-rc/
          mkdir dist
          tar -zcvf dist/network-rc.tar.gz network-rc
          rm -rf network-rc
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/network-rc.tar.gz
          asset_name: network-rc.tar.gz
          asset_content_type: application/tar+gzip
