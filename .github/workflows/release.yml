name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # 匹配版本标签，例如 v1.0.0, v2.3.1 等

jobs:
  build:
    name: Build and Release Asset
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org/'

      - name: Build front-end
        run: |
          cd front-end
          # 确保使用官方 npm 源
          yarn config set registry https://registry.npmjs.org/
          yarn cache clean
          
          # 修复 yarn.lock 文件中的 URL 问题
          if [ -f "yarn.lock" ]; then
            # 备份原始 yarn.lock 文件
            cp yarn.lock yarn.lock.backup
            
            # 替换所有镜像源为官方源
            sed -i 's|https://registry.npm.taobao.org|https://registry.npmjs.org|g' yarn.lock
            sed -i 's|https://registry.nlark.com|https://registry.npmjs.org|g' yarn.lock
            sed -i 's|https://registry.yarnpkg.com|https://registry.npmjs.org|g' yarn.lock
            sed -i 's|https://registry.npmmirror.com|https://registry.npmjs.org|g' yarn.lock
            
            # 修复 URL 格式问题
            sed -i 's|/download/|/|g' yarn.lock
            sed -i 's|?cache=.*"|""|g' yarn.lock
            sed -i 's|/@babel/runtime/@babel/runtime-|/@babel/runtime-|g' yarn.lock
            sed -i 's|/@babel/runtime/-/@babel/runtime-|/@babel/runtime-|g' yarn.lock
            sed -i 's|/@babel/\([^/]*\)/@babel/\1-|/@babel/\1-|g' yarn.lock
            sed -i 's|/@babel/\([^/]*\)/-/@babel/\1-|/@babel/\1-|g' yarn.lock
            sed -i 's|/@ctrl/\([^/]*\)/@ctrl/\1-|/@ctrl/\1-|g' yarn.lock
            sed -i 's|/@ant-design/\([^/]*\)/@ant-design/\1-|/@ant-design/\1-|g' yarn.lock
            sed -i 's|/@ant-design/\([^/]*\)/@ant-design/\1/-/@ant-design/\1-|/@ant-design/\1-|g' yarn.lock
            # 注释掉可能导致语法错误的复杂替换
            # sed -i 's|\(@[^/]*/[^/]*\)-\([0-9]\)|\1/-/\1-\2|g' yarn.lock
            # sed -i 's|/@\([^/]*\)/\([^/]*\)/@\1/\2-|/@\1/\2-|g' yarn.lock
            # sed -i 's|/@\([^/]*\)/\([^/]*\)/@\1/\2/-/@\1/\2-|/@\1/\2-|g' yarn.lock
            # sed -i 's|/\([^/@]*\)/\1-|/\1-|g' yarn.lock
            
            # 修复查询参数和缓存标记
            sed -i 's|\?cache=[^"]*||g' yarn.lock
            sed -i 's|\?file=[^"]*||g' yarn.lock
            
            # 修复特殊包名格式问题
            sed -i 's|/@\([^/]*\)/\([^/]*\)/-/|/@\1/\2/|g' yarn.lock
            sed -i 's|/\([^@/][^/]*\)/-/|/\1/|g' yarn.lock
            
            # 修复协议问题
            sed -i 's|http://registry.npmjs.org|https://registry.npmjs.org|g' yarn.lock
            sed -i 's|//registry.npmjs.org|https://registry.npmjs.org|g' yarn.lock
            
            # 修复其他常见的URL格式问题
            sed -i 's|https://registry.npmjs.org/download/|https://registry.npmjs.org/|g' yarn.lock
            sed -i 's|/-/|/|g' yarn.lock
            sed -i 's|//registry.npmjs.org|https://registry.npmjs.org|g' yarn.lock
            
            # 修复重复路径问题
            sed -i 's|\(@[^/]*/[^/]*\)/\1-|\1-|g' yarn.lock
            sed -i 's|/\([^@/][^/]*\)/\1-|/\1-|g' yarn.lock
            
            # 修复其他常见的URL格式问题
            sed -i 's|https://registry.npmjs.org/download/|https://registry.npmjs.org/|g' yarn.lock
            sed -i 's|/-/|/|g' yarn.lock
            sed -i 's|//registry.npmjs.org|https://registry.npmjs.org|g' yarn.lock
            
            # 修复重复路径问题
            sed -i 's|\(@[^/]*/[^/]*\)/\1-|\1-|g' yarn.lock
            sed -i 's|/\([^@/][^/]*\)/\1-|/\1-|g' yarn.lock
          fi
          
          # 添加 Node.js v18 与 webpack 兼容的环境变量
          export NODE_OPTIONS="--openssl-legacy-provider"
          
          # 安装依赖并构建
          yarn install --network-timeout 600000 --registry https://registry.npmjs.org/ --no-audit
          yarn build

      - name: Install server dependencies
        run: |
          # 确保使用官方 npm 源
          yarn config set registry https://registry.npmjs.org/
          yarn cache clean
          
          # 修复 yarn.lock 文件中的 URL 问题
          if [ -f "yarn.lock" ]; then
            # 备份原始 yarn.lock 文件
            cp yarn.lock yarn.lock.backup
            
            # 替换所有镜像源为官方源
            sed -i 's|https://registry.npm.taobao.org|https://registry.npmjs.org|g' yarn.lock
            sed -i 's|https://registry.nlark.com|https://registry.npmjs.org|g' yarn.lock
            sed -i 's|https://registry.yarnpkg.com|https://registry.npmjs.org|g' yarn.lock
            sed -i 's|https://registry.npmmirror.com|https://registry.npmjs.org|g' yarn.lock
            
            # 修复 URL 格式问题
            sed -i 's|/download/|/|g' yarn.lock
            sed -i 's|?cache=.*"|""|g' yarn.lock
            sed -i 's|/@babel/runtime/@babel/runtime-|/@babel/runtime-|g' yarn.lock
            sed -i 's|/@babel/runtime/-/@babel/runtime-|/@babel/runtime-|g' yarn.lock
            sed -i 's|/@babel/\([^/]*\)/@babel/\1-|/@babel/\1-|g' yarn.lock
            sed -i 's|/@babel/\([^/]*\)/-/@babel/\1-|/@babel/\1-|g' yarn.lock
            sed -i 's|/@ctrl/\([^/]*\)/@ctrl/\1-|/@ctrl/\1-|g' yarn.lock
            sed -i 's|/@ant-design/\([^/]*\)/@ant-design/\1-|/@ant-design/\1-|g' yarn.lock
            sed -i 's|/@ant-design/\([^/]*\)/@ant-design/\1/-/@ant-design/\1-|/@ant-design/\1-|g' yarn.lock
            # 注释掉可能导致语法错误的复杂替换
            # sed -i 's|\(@[^/]*/[^/]*\)-\([0-9]\)|\1/-/\1-\2|g' yarn.lock
            # sed -i 's|/@\([^/]*\)/\([^/]*\)/@\1/\2-|/@\1/\2-|g' yarn.lock
            # sed -i 's|/@\([^/]*\)/\([^/]*\)/@\1/\2/-/@\1/\2-|/@\1/\2-|g' yarn.lock
            # sed -i 's|/\([^/@]*\)/\1-|/\1-|g' yarn.lock
            
            # 修复查询参数和缓存标记
            sed -i 's|\?cache=[^"]*||g' yarn.lock
            sed -i 's|\?file=[^"]*||g' yarn.lock
            
            # 修复特殊包名格式问题
            sed -i 's|/@\([^/]*\)/\([^/]*\)/-/|/@\1/\2/|g' yarn.lock
            sed -i 's|/\([^@/][^/]*\)/-/|/\1/|g' yarn.lock
            
            # 修复协议问题
            sed -i 's|http://registry.npmjs.org|https://registry.npmjs.org|g' yarn.lock
            sed -i 's|//registry.npmjs.org|https://registry.npmjs.org|g' yarn.lock
            
            # 修复其他常见的URL格式问题
            sed -i 's|https://registry.npmjs.org/download/|https://registry.npmjs.org/|g' yarn.lock
            sed -i 's|/-/|/|g' yarn.lock
            sed -i 's|//registry.npmjs.org|https://registry.npmjs.org|g' yarn.lock
            
            # 修复重复路径问题
            sed -i 's|\(@[^/]*/[^/]*\)/\1-|\1-|g' yarn.lock
            sed -i 's|/\([^@/][^/]*\)/\1-|/\1-|g' yarn.lock
            
            # 修复其他常见的URL格式问题
            sed -i 's|https://registry.npmjs.org/download/|https://registry.npmjs.org/|g' yarn.lock
            sed -i 's|/-/|/|g' yarn.lock
            sed -i 's|//registry.npmjs.org|https://registry.npmjs.org|g' yarn.lock
            
            # 修复重复路径问题
            sed -i 's|\(@[^/]*/[^/]*\)/\1-|\1-|g' yarn.lock
            sed -i 's|/\([^@/][^/]*\)/\1-|/\1-|g' yarn.lock
          fi
          
          # 添加 Node.js v18 与 webpack 兼容的环境变量
          export NODE_OPTIONS="--openssl-legacy-provider"
          
          # 安装依赖
          yarn install --network-timeout 600000 --registry https://registry.npmjs.org/ --no-audit

      - name: Package
        shell: bash
        run: |
          # 清理并创建打包目录
          rm -rf network-rc dist
          mkdir -p network-rc/front-end
          
          # 复制必要文件
          cp index.js network-rc/
          cp package.json network-rc/
          cp -r lib network-rc/
          cp -r node_modules network-rc/
          cp -r front-end/build network-rc/front-end/
          
          # 添加安装脚本
          cp install_with_cloudflare.sh network-rc/
          
          # 创建发布包
          mkdir -p dist
          tar -zcvf dist/network-rc.tar.gz network-rc
          rm -rf network-rc

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/network-rc.tar.gz
          asset_name: network-rc.tar.gz
          asset_content_type: application/tar+gzip